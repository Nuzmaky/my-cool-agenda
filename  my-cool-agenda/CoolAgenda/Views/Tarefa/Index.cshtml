@model CoolAgenda.ViewModels.TarefaVM.TarefaVM
@{
    ViewBag.Title = "Tarefa";
}

<div id="paginas" style="width: 97%; margin-left: auto; margin-right: auto;">

    <h3>Minhas Tarefas</h3>

    @{
        if (Model.TotalRegistros > 0)
        {
        <div class="Tabela" style="margin-bottom: 50px">
            <table>
                <tr>
                    <th>Nome</th>
                    <th>Descrição</th>
                    <th>Requisitante</th>
                    <th>Grupo</th>
                    <th>Data Inicial</th>
                    <th>Data Final</th>
                    <th>Concluida</th>
                    <th>Concluir</th>
                </tr>
                @for (int i = 0; i < Model.ListaTarefa.Count; i++)
                {
                    
                    <tr>
                        <td>@Model.ListaTarefa[i].NomeTarefa</td>
                        <td>@Model.ListaTarefa[i].DescTarefa</td>
                        <td>@Model.ListaTarefa[i].UsuarioCriador.Nome</td>
                        <td>@Model.ListaTarefa[i].Grupo.Nome</td>
                        <td>@Model.ListaTarefa[i].DataInicial</td>
                        <td>@Model.ListaTarefa[i].DataFinal</td>
                        @{
                    if (Model.ListaTarefa[i].Concluida == "S")
                    { 
                            <td><span>Concluida</span></td>
                            <td><span></span></td>
                    }
                    else
                    {
                            <td><span>Em andamento</span></td>
                            <td><a href="#" onclick="Concluir(@Model.ListaTarefa[i].IdTarefa);">Concluir</a></td> 
                    } 
                        }
                        
                    </tr>
             
                }
            </table>
        </div>
        
        }
        else
        {
        <p>Não existe nenhum registro cadastrado.</p>
        }
    }

    <h3>Tarefas Requisitadas</h3>

    <a href="@Url.Action("Form")" class="Nova">
        <img src="~/images/Novo.png" alt="novo" />Nova</a><br />
    @{
        if (Model.TotalRegistrosReq > 0)
        {
        <div class="Tabela">
            <table>
                <tr>
                    <th>Nome</th>
                    <th>Usuário</th>
                    <th>Grupo</th>
                    <th>Data Inicial</th>
                    <th>Data Final</th>
                    <th>Concluída</th>
                    <th>Editar</th>
                    <th>Excluir</th>
                </tr>
                @for (int i = 0; i < Model.ListaTarefaReq.Count; i++)
                {
                    
                    <tr>
                        <td>@Model.ListaTarefaReq[i].NomeTarefa</td>
                        <td>@Model.ListaTarefaReq[i].Usuario.Nome</td>
                        <td>@Model.ListaTarefaReq[i].Grupo.Nome</td>
                        <td>@Model.ListaTarefaReq[i].DataInicial</td>
                        <td>@Model.ListaTarefaReq[i].DataFinal</td>
                        @{
                    if (Model.ListaTarefaReq[i].Concluida == "S")
                    { 
                            <td><span>Concluida</span></td>
                    }
                    else
                    {
                            <td><span>Em andamento</span></td> 
                    } 
                        }

                        <td class="opcoes2">
                            <img class="no-border" src="~/Images/Editar.png" />@Html.ActionLink(" Editar", "Form", new { id = Model.ListaTarefaReq[i].IdTarefa })</td>
                        <td class="opcoes">

                                <a href="#" onclick="DesativarRegistro(@Model.ListaTarefaReq[i].IdTarefa);">Excluir</a>

                        </td>

                    </tr>
             
                }
            </table>
        </div>
        
        }
        else
        {
        <p>Não existe nenhum registro cadastrado.</p>
        }
    }


</div>
@section scripts 
{
    <script type="text/javascript">

        // Armazena o id do registro a ser ativado/desativado
        var idRegistro;

        function DesativarRegistro(id) {
            idRegistro = id;
            BootstrapDialog.confirm("Excluir", "Deseja excluir a tarefa?", function (result) {
                if (result) {
                    RequisitaDesativacaoRegServidor(id);
                }
            });
        }

        // Trata o evento onclick da opção de dar permissão
        function Concluir(id) {
            idRegistro = id;
            BootstrapDialog.confirm("Concluir", "Tarefa finalizada?", function (result) {
                if (result) {
                    RequisitaConcluir(id);
                }
            });
        }

        // Efetua uma requisição ao servidor pedindo para desativar um registro
        function RequisitaDesativacaoRegServidor() {
            $.post('@Url.Action("Desativar")', { id: idRegistro }, function (data) {
                // Mostra uma notificação de acordo com a resposta do servidor
                if (!data.Erro)
                    JSMostraNotificacaoSucesso(data.Mensagem, false, function () { location.reload(); });
                else
                    JSMostraNotificacaoErro(data.Mensagem, true);
            });
        }


        // Efetua uma requisição ao servidor pedindo para ativar um registro
        function RequisitaConcluir() {
            $.post('@Url.Action("Concluir")', { id: idRegistro }, function (data) {
                // Mostra uma notificação de acordo com a resposta do servidor
                if (!data.Erro)
                    JSMostraNotificacaoSucesso(data.Mensagem, false, function () { location.reload(); });
                else
                    JSMostraNotificacaoErro(data.Mensagem, true);
            });
        }

    </script>
}
